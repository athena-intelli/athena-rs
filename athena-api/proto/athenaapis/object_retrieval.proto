syntax = "proto3";
import "athenaapis/structures.proto";

option java_multiple_files = true;
option java_package = "com.athena.api.service";

package ObjectRetrievalService;

service ObjectRetrievalService{
  rpc GetFactoryById(structures.ObjectId) returns(structures.Factory){}
  rpc GetFactoryByCode(structures.ObjectCode) returns(structures.Factory){}
  rpc GetWorkshopById(structures.ObjectId) returns(structures.Workshop){}
  rpc GetWorkshopByCode(structures.ObjectCode) returns(structures.Workshop){}
  rpc GetProductionLineById(structures.ObjectId) returns(structures.ProductionLine){}
  rpc GetProductionLineByCode(structures.ObjectCode) returns(structures.ProductionLine){}
  rpc GetWorkStationById(structures.ObjectId)returns(structures.WorkStation){}
  rpc GetWorkStationByCode(structures.ObjectCode)returns(structures.WorkStation){}
  rpc GetEquipmentById(structures.ObjectId)returns(structures.Equipment){}
  rpc GetEquipmentByCode(structures.ObjectCode)returns(structures.Equipment){}
  rpc GetPartByID(structures.ObjectId)returns(structures.Part){}
  rpc GetPartByNumberAndRevision(PartNumberAndRevisionRequest)returns(structures.Part){}
  rpc GetLocationById(structures.ObjectId) returns(structures.Location){}
  rpc GetLocationByCode(structures.ObjectCode) returns(structures.Location){}
  rpc GetLotById(structures.ObjectId)returns(structures.Lot){}
  rpc GetLotBySerialNumber(structures.ObjectSerialNumber)returns(structures.Lot){}
  rpc GetRuntimeBomById(structures.ObjectId)returns(structures.RuntimeBom){}
  rpc GetRouteById(structures.ObjectId)returns(structures.Route){}
  rpc GetRouteByCodeAndVersion(structures.ObjectCode)returns(structures.Route){}
  rpc GetOperationById(structures.ObjectId) returns(structures.RouteOperation){}
  rpc GetOperationByCode(structures.ObjectCode) returns(structures.RouteOperation){}
  rpc GetUnitById(structures.ObjectId)returns(structures.Unit){}
  rpc GetUnitBySeriaNumber(structures.ObjectSerialNumber)returns(structures.Unit){}
  rpc GetUserById(structures.ObjectId)returns(structures.User){}
  rpc GetUserByName(structures.ObjectName)returns(structures.User){}
  rpc GetWorkOrderById(structures.ObjectId)returns(structures.WorkOrder){}
  rpc GetWorkOrderByNumber(structures.ObjectName)returns(structures.WorkOrder){}
  rpc GetDocById(structures.ObjectId)returns(structures.Doc){}
  rpc GetDocByCode(structures.ObjectCode)returns(structures.Doc){}

  rpc GetEquipments(structures.Filter)returns(stream structures.Equipment){}
  rpc GetWorkStations(structures.Filter)returns(stream structures.WorkStation){}
  rpc GetProductionLines(structures.Filter)returns(stream structures.ProductionLine){}
  rpc GetWorkshops(structures.Filter)returns(stream structures.Workshop){}
  rpc GetFactories(structures.Filter)returns(stream structures.Factory){}
  rpc GetConsumeParts(structures.Filter)returns(stream structures.ConsumedPart){}
  rpc GetBOMs(structures.Filter)returns(stream structures.Bom){}
  rpc GetBOMItems(structures.Filter)returns(stream structures.BomItem){}
  rpc GetContainers(structures.Filter)returns(stream structures.Container){}
  rpc GetLots(structures.Filter)returns(stream structures.Lot){}
  rpc GetUnits(structures.Filter)returns(stream structures.Unit){}
  rpc GetParts(structures.Filter)returns(stream structures.Part){}
  rpc GetRoutes(structures.Filter)returns(stream structures.Route){}
  rpc GetRouteSteps(structures.Filter)returns(stream structures.RouteStep){}
  rpc GetRouteOperations(structures.Filter)returns(stream structures.RouteOperation){}
  rpc GetRuntimeBomItems(structures.Filter)returns(stream structures.RuntimeBomItem){}
  rpc GetRuntimeBoms(structures.Filter)returns(stream structures.RuntimeBom){}
  rpc GetWorkOrders(structures.Filter)returns(stream structures.WorkOrder){}
  rpc GetUsers(structures.Filter)returns(stream structures.User){}
  rpc GetDocs(structures.Filter)returns(stream structures.Doc){}

}

message PartNumberAndRevisionRequest{
  string part_number = 1;
  string part_Revision = 2;
}
